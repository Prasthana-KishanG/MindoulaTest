"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const protractor_1 = require("protractor");
const Base_1 = require("../Util/Base");
const Memberspage_1 = require("../pageObjects/Memberspage");
const ParamManager_1 = require("../Util/ParamManager");
const chai_1 = __importDefault(require("chai"));
const cucumber_1 = require("cucumber");
let mpage = new Memberspage_1.Memberspage();
let base = new Base_1.Base();
let pm = new ParamManager_1.ParamManager();
var expect = chai_1.default.expect;
cucumber_1.Then('click on Assessments Tab', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        var a = dataTable.hashes();
        if (a[0].TabName == "Documents") {
            protractor_1.element(protractor_1.by.xpath(mpage.doctab)).click();
        }
        else {
            var m_tab = mpage.tab.replace("$tabname$", a[0].TabName);
            protractor_1.element(protractor_1.by.xpath(m_tab)).click();
        }
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
    });
});
cucumber_1.Then('click on Starts Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableH(dataTable);
        if (pm.getParamH("Name") == "HRSN") {
            base.WaitforElementPresence(protractor_1.element(protractor_1.By.xpath(mpage.hrsnele)));
            protractor_1.browser.actions().mouseMove(protractor_1.element(protractor_1.By.xpath(mpage.hrsnele))).perform();
            protractor_1.element(protractor_1.By.xpath(mpage.hrsnele)).click();
            protractor_1.browser.sleep(8000);
        }
        if (pm.getParamH("Name") == "CCP Intake") {
            base.WaitforElementPresence(protractor_1.element(protractor_1.By.xpath(mpage.CCPIntake)));
            protractor_1.browser.actions().mouseMove(protractor_1.element(protractor_1.By.xpath(mpage.CCPIntake))).perform();
            protractor_1.element(protractor_1.By.xpath(mpage.CCPIntake)).click();
            protractor_1.browser.sleep(8000);
        }
        if (pm.getParamH("Name") == "IVRP Intake") {
            base.WaitforElementPresence(protractor_1.element(protractor_1.By.xpath(mpage.IVRPIntake)));
            protractor_1.browser.actions().mouseMove(protractor_1.element(protractor_1.By.xpath(mpage.IVRPIntake))).perform();
            protractor_1.element(protractor_1.By.xpath(mpage.IVRPIntake)).click();
            protractor_1.browser.sleep(6000);
        }
        if (pm.getParamH("Name") == "CCP Intake (V2)") {
            base.WaitforElementPresence(protractor_1.element(protractor_1.By.xpath(mpage.CCPIntakeV2)));
            protractor_1.browser.actions().mouseMove(protractor_1.element(protractor_1.By.xpath(mpage.CCPIntakeV2))).perform();
            protractor_1.element(protractor_1.By.xpath(mpage.CCPIntakeV2)).click();
            protractor_1.browser.sleep(8000);
        }
        if (pm.getParamH("Name") == "IVRP Intake (V2)") {
            base.WaitforElementPresence(protractor_1.element(protractor_1.By.xpath(mpage.IVRPV2)));
            protractor_1.browser.actions().mouseMove(protractor_1.element(protractor_1.By.xpath(mpage.IVRPV2))).perform();
            protractor_1.element(protractor_1.By.xpath(mpage.IVRPV2)).click();
            protractor_1.browser.sleep(8000);
        }
        if (pm.getParamH("Name") == "IVRP Intake (V3)") {
            base.WaitforElementPresence(protractor_1.element(protractor_1.By.xpath(mpage.IVRPV3)));
            protractor_1.browser.actions().mouseMove(protractor_1.element(protractor_1.By.xpath(mpage.IVRPV3))).perform();
            protractor_1.element(protractor_1.By.xpath(mpage.IVRPV3)).click();
            protractor_1.browser.sleep(8000);
        }
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
    });
});
cucumber_1.Then('click on Start Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableH(dataTable);
        if (pm.getParamH("Name") == "HRSN") {
            base.WaitforElementPresence(protractor_1.element(protractor_1.By.xpath(mpage.hrsnele)));
            protractor_1.browser.actions().mouseMove(protractor_1.element(protractor_1.By.xpath(mpage.hrsnele))).perform();
            protractor_1.element(protractor_1.By.xpath(mpage.hrsnele)).click();
        }
        if (pm.getParamH("Name") == "CCP Intake") {
            protractor_1.browser.actions().mouseMove(protractor_1.element(protractor_1.By.xpath(mpage.CCPIntake))).perform();
            base.WaitforElementPresence(protractor_1.element(protractor_1.By.xpath(mpage.CCPIntake)));
            protractor_1.element(protractor_1.By.xpath(mpage.CCPIntake)).click();
        }
        else {
            var m_start_assessment = mpage.mstart_str.replace("$replaceToken$", pm.getParamH("Name"));
            base.WaitforElementPresence(protractor_1.element(protractor_1.by.xpath(m_start_assessment)));
            base.moveCursorToAnElement(m_start_assessment);
            yield protractor_1.element(protractor_1.by.xpath(m_start_assessment)).click();
            //browser.sleep(5000);
            //browser.navigate().refresh();
            protractor_1.browser.sleep(4000);
            base.WaitforElementPresence(protractor_1.element(protractor_1.By.tagName("assessment-title")));
            yield protractor_1.browser.getTitle().then(function (text) {
                expect(text).to.equal("mMR");
                protractor_1.browser.sleep(3000);
            });
        }
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
    });
});
cucumber_1.Then('Enter Data in M3 Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        const arr = pm.getPMap();
        for (const key of Object.keys(arr)) {
            yield base.setChips_singleSelect(mpage.assess_single.replace('$paramName$', key), pm.getParamV(key));
            yield protractor_1.browser.getTitle().then(function (text) {
                expect(text).to.equal("mMR");
            });
        }
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
// Then('Enter Data in M3 Assessment', async function (dataTable) {
//   pm.dataTableV(dataTable);
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I feel sad, down in the dumps or unhappy"), pm.getParamV("I feel sad, down in the dumps or unhappy"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Nothing seems to give me much pleasure"), pm.getParamV("Nothing seems to give me much pleasure"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have had thoughts of suicide"), pm.getParamV("I have had thoughts of suicide"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have difficulty sleeping"), pm.getParamV("I have difficulty sleeping"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have been sleeping too much"), pm.getParamV("I have been sleeping too much"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have lost some appetite"), pm.getParamV("I have lost some appetite"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have been eating more"), pm.getParamV("I have been eating more"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I feel tense, anxious"), pm.getParamV("I feel tense, anxious"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I feel worried or fearful"), pm.getParamV("I feel worried or fearful"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have attacks of anxiety or panic"), pm.getParamV("I have attacks of anxiety or panic"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I worry about dying or losing control"), pm.getParamV("I worry about dying or losing control"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I am nervous or shaky in social situations"), pm.getParamV("I am nervous or shaky in social situations"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have nightmares or flashbacks"), pm.getParamV("I have nightmares or flashbacks"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I am jumpy or feel startled easily"), pm.getParamV("I am jumpy or feel startled easily"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I avoid places that strongly remind me of a bad experience"), pm.getParamV("I avoid places that strongly remind me of a bad experience"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I feel dull, numb, or detached"), pm.getParamV("I feel dull, numb, or detached"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "get certain thoughts out of my mind"), pm.getParamV("get certain thoughts out of my mind"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I feel I must repeat certain acts or rituals"), pm.getParamV("I feel I must repeat certain acts or rituals"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I feel the need to check and recheck things"), pm.getParamV("I feel the need to check and recheck things"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Had more energy than usual?"), pm.getParamV("Had more energy than usual?"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Felt unusually irritable or angry?"), pm.getParamV("Felt unusually irritable or angry?"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Felt unusually excited, revved up or high?"), pm.getParamV("Felt unusually excited, revved up or high?"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Needed less sleep than usual?"), pm.getParamV("Needed less sleep than usual?"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Interferes with work or school"), pm.getParamV("Interferes with work or school"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Affects my relationships with friends or family"), pm.getParamV("Affects my relationships with friends or family"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Has led to my using alcohol to get by"), pm.getParamV("Has led to my using alcohol to get by"));
//   await base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Has led to my using drugs"), pm.getParamV("Has led to my using drugs"));
//   await browser.getTitle().then(function (text) {
//     expect(text).to.equal("mMR");
//   })
//   const screenshot = await browser.takeScreenshot();
//   this.attach(screenshot, "image/png");
//   return true;
// });
cucumber_1.Then('Verify M3 Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('M3 - Risk-Check', yield mpage.assess_risk.getText(), pm.getParamV("RISK"));
        base.compareValues('M3 - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('M3 - M3_IMPAIRMENT_SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "IMPAIRMENT"))).getText(), pm.getParamV("M3_IMPAIRMENT_SCORE"));
        base.compareValues('M3 - ANXIETY_SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "ANXIETY"))).getText(), pm.getParamV("ANXIETY_SCORE"));
        base.compareValues('M3 - SELF-HARM SYMPTOM SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "SELF-HARM"))).getText(), pm.getParamV("SELF_HARM_SCORE"));
        base.compareValues('M3 - BIPOLAR RISK SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "BIPOLAR"))).getText(), pm.getParamV("BIPOLAR_SCORE"));
        base.compareValues('M3 - DEPRESSION RISK SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "DEPRESSION"))).getText(), pm.getParamV("DEPRESSION_SCORE"));
        base.compareValues('M3 - SELF_HARM_ALERT', base.verifySelfHarmAlert(base.getSize(mpage.m_m3_selfharmalert)), pm.getParamV("SELF_HARM_ALERT"));
        base.compareValues('M3 - PTSD RISK SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "PTSD"))).getText(), pm.getParamV("PTSD_SCORE"));
        //base.compareValues('M3 - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasks(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('M3 - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify M3 Responses1', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('M3 - Risk-Check', yield mpage.assess_risk.getText(), pm.getParamV("RISK"));
        base.compareValues('M3 - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('M3 - M3_IMPAIRMENT_SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "IMPAIRMENT"))).getText(), pm.getParamV("M3_IMPAIRMENT_SCORE"));
        base.compareValues('M3 - ANXIETY_SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "ANXIETY"))).getText(), pm.getParamV("ANXIETY_SCORE"));
        base.compareValues('M3 - SELF-HARM SYMPTOM SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "SELF-HARM"))).getText(), pm.getParamV("SELF_HARM_SCORE"));
        base.compareValues('M3 - BIPOLAR RISK SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "BIPOLAR"))).getText(), pm.getParamV("BIPOLAR_SCORE"));
        base.compareValues('M3 - DEPRESSION RISK SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "DEPRESSION"))).getText(), pm.getParamV("DEPRESSION_SCORE"));
        base.compareValues('M3 - SELF_HARM_ALERT', base.verifySelfHarmAlert1(protractor_1.element(protractor_1.by.xpath(mpage.m_m3_selfharmalert1))), pm.getParamV("SELF_HARM_ALERT"));
        base.compareValues('M3 - PTSD RISK SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "PTSD"))).getText(), pm.getParamV("PTSD_SCORE"));
        //base.compareValues('M3 - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasks(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        //base.compareValues('M3 - FOLLOW UP TASKS', await base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS")); 
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify M3 Responses2', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('M3 - Risk-Check', yield mpage.assess_risk.getText(), pm.getParamV("RISK"));
        base.compareValues('M3 - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('M3 - M3_IMPAIRMENT_SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "IMPAIRMENT"))).getText(), pm.getParamV("M3_IMPAIRMENT_SCORE"));
        base.compareValues('M3 - ANXIETY_SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "ANXIETY"))).getText(), pm.getParamV("ANXIETY_SCORE"));
        base.compareValues('M3 - SELF-HARM SYMPTOM SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "SELF-HARM"))).getText(), pm.getParamV("SELF_HARM_SCORE"));
        base.compareValues('M3 - BIPOLAR RISK SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "BIPOLAR"))).getText(), pm.getParamV("BIPOLAR_SCORE"));
        base.compareValues('M3 - DEPRESSION RISK SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "DEPRESSION"))).getText(), pm.getParamV("DEPRESSION_SCORE"));
        base.compareValues('M3 - SELF_HARM_ALERT', base.verifySelfHarmAlert1(protractor_1.element(protractor_1.by.xpath(mpage.m_m3_selfharmalert1))), pm.getParamV("SELF_HARM_ALERT"));
        base.compareValues('M3 - PTSD RISK SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type.replace("$replaceToken$", "PTSD"))).getText(), pm.getParamV("PTSD_SCORE"));
        //base.compareValues('M3 - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasks(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('M3 - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify Followup Tasks in Home page', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('Home Page - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTaskHome(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('take action on assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableH(dataTable);
        if (pm.getParamH("Button_to_click") == ("Submit")) {
            yield mpage.m_submit_btn.click();
            protractor_1.browser.sleep(8000);
            //base.UrlContains("results");
            base.WaitforElementPresence(mpage.m_m3_followup);
        }
        else if (pm.getParamH("Button_to_click") == ("Discard")) {
            yield mpage.m_discard_btn.click();
            yield mpage.m_discard_yes.click();
        }
        else if (pm.getParamH("Button_to_click") == ("Save")) {
            protractor_1.browser.sleep(5000);
            yield mpage.m_save_btn.click();
            protractor_1.browser.sleep(7000);
            yield protractor_1.browser.getTitle().then(function (text) {
                expect(text).to.equal("mMR");
            });
            const screenshot = yield protractor_1.browser.takeScreenshot();
            this.attach(screenshot, "image/png");
        }
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
    });
});
cucumber_1.Then('take actions on assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableH(dataTable);
        if (pm.getParamH("Button_to_click") == ("Submit")) {
            yield mpage.m_submit_btn.click();
            protractor_1.browser.sleep(10000);
            //base.UrlContains("results");
            //base.WaitforElementPresence(mpage.m_m3_followup);
        }
        else if (pm.getParamH("Button_to_click") == ("Discard")) {
            yield mpage.m_discard_btn.click();
            yield mpage.m_discard_yes.click();
        }
        else if (pm.getParamH("Button_to_click") == ("Save")) {
            yield mpage.m_save_btn.click();
            yield protractor_1.browser.getTitle().then(function (text) {
                expect(text).to.equal("mMR");
            });
        }
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
    });
});
cucumber_1.Then('take action in results page', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        protractor_1.browser.sleep(4000);
        pm.dataTableH(dataTable);
        if (pm.getParamH("BUTTON_TO_CLICK") == ("Edit")) {
            yield mpage.m_edit_btn.click();
            protractor_1.browser.sleep(4000);
            yield protractor_1.browser.getTitle().then(function (text) {
                expect(text).to.equal("mMR");
            });
        }
    });
});
cucumber_1.Then('click on Members Tab', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableH(dataTable);
        var m_tab = mpage.assessmentsTab.replace("$tabname$", pm.getParamH("TabName"));
        if (pm.getParamH("TabName") == "Documents") {
            protractor_1.element(protractor_1.by.xpath(mpage.doctab)).click();
        }
        // if (pm.getParamH("TabName") == "Care Team") {
        //   //var m_tab = mpage.assessmentsTab.replace("$tabname$", pm.getParamH("TabName"));
        //   base.WaitforElementPresence(element(by.xpath(m_tab)));
        //  await element(by.xpath(m_tab)).click();
        //  //browser.sleep(6000);
        //  base.UrlContains("care-team");
        //   await browser.getTitle().then(function (text) {
        //     expect(text).to.equal("mMR");
        //   })
        // }
        // if (pm.getParamH("TabName") == "Tasks") {
        //   //var m_tab = mpage.assessmentsTab.replace("$tabname$", pm.getParamH("TabName"));
        //   base.WaitforElementPresence(element(by.xpath(m_tab)));
        //  await element(by.xpath(m_tab)).click();
        //  base.UrlContains("tasks");
        //   await browser.getTitle().then(function (text) {
        //     expect(text).to.equal("mMR");
        //   })
        // }
        else {
            var m_tab = mpage.assessmentsTab.replace("$tabname$", pm.getParamH("TabName"));
            base.WaitforElementPresence(protractor_1.element(protractor_1.by.xpath(m_tab)));
            yield protractor_1.element(protractor_1.by.xpath(m_tab)).click();
            protractor_1.browser.sleep(7000);
            //base.UrlContains("assessments");
            yield protractor_1.browser.getTitle().then(function (text) {
                expect(text).to.equal("mMR");
            });
        }
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
    });
});
cucumber_1.Then('Enter Data in MADRS Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Representing despondency"), pm.getParamV("Representing despondency"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Representing reports of depressed mood"), pm.getParamV("Representing reports of depressed mood"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Representing reports of depressed mood"), pm.getParamV("Representing reports of depressed mood"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Representing feelings of ill-defined discomfort"), pm.getParamV("Representing feelings of ill-defined discomfort"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Representing the experience of reduced duration or depth of sleep"), pm.getParamV("Representing the experience of reduced duration or depth of sleep"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Representing the feeling of loss of appetite compared with when well"), pm.getParamV("Representing the feeling of loss of appetite compared with when well"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Representing difficulties in collecting one"), pm.getParamV("Representing difficulties in collecting one"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Representing a difficulty getting started or slowness"), pm.getParamV("Representing a difficulty getting started or slowness"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Representing the subjective experience of reduced interest in the surroundings"), pm.getParamV("Representing the subjective experience of reduced interest in the surroundings"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Representing thoughts of guilt"), pm.getParamV("Representing thoughts of guilt"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Representing the feeling that life is not worth living"), pm.getParamV("Representing the feeling that life is not worth living"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify MADRS Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('MADRS - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('MADRS - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('MADRS - IMPAIRMENT_SCORE', yield mpage.assess_total_desc.getText(), pm.getParamV("TOTAL_DESC"));
        //base.compareValues('MADRS - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasks(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('MADRS - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in Trauma Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you feel safe at home?"), pm.getParamV("Do you feel safe at home?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "kicked or otherwise physically hurt by someone"), pm.getParamV("kicked or otherwise physically hurt by someone"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you ever been physically attacked"), pm.getParamV("Have you ever been physically attacked"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you ever been physically attacked"), pm.getParamV("Have you ever been physically attacked"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Were you ever present when another person was killed"), pm.getParamV("Were you ever present when another person was killed"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you ever been forced to have sex or do something sexual against your will?"), pm.getParamV("Have you ever been forced to have sex or do something sexual against your will?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you ever been in any other situation that was extremely frightening"), pm.getParamV("Have you ever been in any other situation that was extremely frightening"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        // const arr = pm.getPMap();
        // for (const key of Object.keys(arr)) {
        //   await base.setChips_singleSelect(mpage.assess_single.replace('$paramName$', key), pm.getParamV(key));
        //     await browser.getTitle().then(function (text) {
        //     expect(text).to.equal("mMR");
        //   })
        // }
        // await browser.getTitle().then(function (text) {
        //   expect(text).to.equal("mMR");
        // })
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in Trauma Assessment Member Platform', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you feel safe at home?"), pm.getParamV("Do you feel safe at home?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "kicked or otherwise physically hurt by someone"), pm.getParamV("kicked or otherwise physically hurt by someone"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you ever been forced to have sex or do something sexual against your will?"), pm.getParamV("Have you ever been forced to have sex or do something sexual against your will?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you ever been physically attacked, like being hit, kicked or beaten up?"), pm.getParamV("Have you ever been physically attacked, like being hit, kicked or beaten up?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you ever been in any other situation that was extremely frightening"), pm.getParamV("Have you ever been in any other situation that was extremely frightening"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Were you ever present when another person was killed, seriously injured, or sexually or physically assaulted?"), pm.getParamV("Were you ever present when another person was killed, seriously injured, or sexually or physically assaulted?"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify Trauma Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('Trauma - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('Trauma - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('Trauma - TOTAL_DESC', yield mpage.assess_total_desc.getText(), pm.getParamV("TOTAL_DESC"));
        //base.compareValues('Trauma - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasksTrauma(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('Trauma - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('start assessment from results page', (dataTable) => __awaiter(void 0, void 0, void 0, function* () {
    pm.dataTableH(dataTable);
    if (pm.getParamH("Name") == "HRSN") {
        base.scrollVerticalBy();
        protractor_1.element(mpage.HRSN_start).click();
    }
    if (pm.getParamH("Name") == "HRSNS") {
        base.scrollVerticalBy();
        protractor_1.element(mpage.HRSNS_start).click();
    }
    if (pm.getParamH("Name") == "CCP Intake") {
        base.scrollVerticalBy();
        protractor_1.element(mpage.CCPIntake_start).click();
    }
    if (pm.getParamH("Name") == "CCP Intake (V2)") {
        base.scrollVerticalBy();
        protractor_1.element(mpage.CCPIntakeV2_start).click();
    }
    if (pm.getParamH("Name") == "PHQ9") {
        base.scrollVerticalBy();
        protractor_1.element(mpage.PHQ9_start).click();
    }
    else {
        base.scrollVerticalBy();
        var m_start_assessment = mpage.mstart_str.replace("$replaceToken$", pm.getParamH("Name"));
        base.moveCursorToAnElement(m_start_assessment);
        yield protractor_1.element(protractor_1.by.xpath(m_start_assessment)).click();
        //browser.sleep(7000);
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
    }
}));
cucumber_1.Then('Enter Data in PHQ9 Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Feeling down, depressed, or hopeless"), pm.getParamV("Feeling down, depressed, or hopeless"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Little interest or pleasure in doing things?"), pm.getParamV("Little interest or pleasure in doing things?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Trouble falling or staying asleep, or sleeping too much"), pm.getParamV("Trouble falling or staying asleep, or sleeping too much"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Trouble falling or staying asleep, or sleeping too much"), pm.getParamV("Trouble falling or staying asleep, or sleeping too much"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Feeling tired or having little energy"), pm.getParamV("Feeling tired or having little energy"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Poor appetite or overeating"), pm.getParamV("Poor appetite or overeating"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Feeling bad about yourself or that you are a failure"), pm.getParamV("Feeling bad about yourself or that you are a failure"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Trouble concentrating on things, such as reading the newspaper"), pm.getParamV("Trouble concentrating on things, such as reading the newspaper"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Moving or speaking so slowly that other people could have noticed"), pm.getParamV("Moving or speaking so slowly that other people could have noticed"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Thoughts that you would be better off dead"), pm.getParamV("Thoughts that you would be better off dead"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "If you checked off any problems, how difficult have these problems made it for you to do your work"), pm.getParamV("If you checked off any problems, how difficult have these problems made it for you to do your work"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        // const arr = pm.getPMap();
        // for (const key of Object.keys(arr)) {
        //   await base.setChips_singleSelect(mpage.assess_single.replace('$paramName$', key), pm.getParamV(key));
        //   await browser.getTitle().then(function (text) {
        //     expect(text).to.equal("mMR");
        //   })
        // }
        // await browser.getTitle().then(function (text) {
        //   expect(text).to.equal("mMR");
        //})
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify PHQ9 Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('PHQ9 - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('PHQ9 - Risk-Check', yield mpage.assess_risk.getText(), pm.getParamV("RISK"));
        base.compareValues('PHQ9 - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('PHQ9 - TOTAL_DESC', yield mpage.assess_total_desc.getText(), pm.getParamV("TOTAL_DESC"));
        base.compareValues('PHQ9 - SELF_HARM_ALERT', base.verifySelfHarmAlert(base.getSize(mpage.m_m3_selfharmalert)), pm.getParamV("SELF_HARM_ALERT"));
        //base.compareValues('PHQ9 - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasksPHQ(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('PHQ9 - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in CCI Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "technology?"), pm.getParamV("technology?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Hx"), pm.getParamV("Hx"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Speech"), pm.getParamV("Speech"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Affect"), pm.getParamV("Affect"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Mood"), pm.getParamV("Mood"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Orientation"), pm.getParamV("Orientation"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Memory"), pm.getParamV("Memory"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Attention"), pm.getParamV("Attention"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Hallucination"), pm.getParamV("Hallucination"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Thoughts"), pm.getParamV("Thoughts"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Suicidality"), pm.getParamV("Suicidality"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Homicidality"), pm.getParamV("Homicidality"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Behavior"), pm.getParamV("Behavior"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Insight"), pm.getParamV("Insight"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Judgement"), pm.getParamV("Judgement"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Impulse control"), pm.getParamV("Impulse control"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Pregnant/Breastfeeding"), pm.getParamV("Pregnant/Breastfeeding"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Current Use"), pm.getParamV("Current Use"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Hx of Mental Illness"), pm.getParamV("Hx of Mental Illness"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Hx of Substance Abuse"), pm.getParamV("Hx of Substance Abuse"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Hx of Suicide"), pm.getParamV("Hx of Suicide"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Hx of Violent"), pm.getParamV("Hx of Violent"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Trauma"), pm.getParamV("Trauma"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Sleep"), pm.getParamV("Sleep"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Exercise"), pm.getParamV("Exercise"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Interested in treatment"), pm.getParamV("Interested in treatment"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in HRSN Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Think about the place you live"), pm.getParamV("Think about the place you live"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "What is your living situation today?"), pm.getParamV("What is your living situation today?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "In the past 12 months, has lack of reliable transportation kept you from medical appointments"), pm.getParamV("In the past 12 months, has lack of reliable transportation kept you from medical appointments"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "you worried that your food would run out before you got money to buy more"), pm.getParamV("you worried that your food would run out before you got money to buy more"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "have money to get more"), pm.getParamV("have money to get more"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "In the past 12 months has the electric, gas, oil, or water company threatened to shut off services"), pm.getParamV("In the past 12 months has the electric, gas, oil, or water company threatened to shut off services"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often does anyone, including family and friends, physically hurt you?"), pm.getParamV("How often does anyone, including family and friends, physically hurt you?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often does anyone, including family and friends, insult or talk down to you?"), pm.getParamV("How often does anyone, including family and friends, insult or talk down to you?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often does anyone, including family and friends, threaten you with harm?"), pm.getParamV("How often does anyone, including family and friends, threaten you with harm?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often does anyone, including family and friends, scream or curse at you?"), pm.getParamV("How often does anyone, including family and friends, scream or curse at you?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How hard is it for you to pay for the very basics like food, housing, medical care, and heating?"), pm.getParamV("How hard is it for you to pay for the very basics like food, housing, medical care, and heating?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you want help finding or keeping work or a job?"), pm.getParamV("Do you want help finding or keeping work or a job?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "If for any reason you need help with day-to-day activities such as bathing, preparing meals, shopping, managing finances, etc"), pm.getParamV("If for any reason you need help with day-to-day activities such as bathing, preparing meals, shopping, managing finances, etc"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often do you feel lonely or isolated from those around you?"), pm.getParamV("How often do you feel lonely or isolated from those around you?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you speak a language other than English at home?"), pm.getParamV("Do you speak a language other than English at home?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you want help with school or training?"), pm.getParamV("Do you want help with school or training?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "In the last 30 days, other than the activities you did for work, on average"), pm.getParamV("In the last 30 days, other than the activities you did for work, on average"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "On average, how many minutes did you usually spend exercising at this level on one of those days?"), pm.getParamV("On average, how many minutes did you usually spend exercising at this level on one of those days?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How many times in the past 12 months have you had 5 or more drinks in a day"), pm.getParamV("How many times in the past 12 months have you had 5 or more drinks in a day"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How many times in the past 12 months have you used tobacco products"), pm.getParamV("How many times in the past 12 months have you used tobacco products"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How many times in the past year have you used prescription drugs for non-medical reasons?"), pm.getParamV("How many times in the past year have you used prescription drugs for non-medical reasons?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How many times in the past year have you used illegal drugs?"), pm.getParamV("How many times in the past year have you used illegal drugs?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Over the past 2 weeks, how often have you been bothered by any of the following problems?Little interest or pleasure in doing things?"), pm.getParamV("Over the past 2 weeks, how often have you been bothered by any of the following problems?Little interest or pleasure in doing things?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Over the past 2 weeks, how often have you been bothered by any of the following problems?Feeling down, depressed, or hopeless?"), pm.getParamV("Over the past 2 weeks, how often have you been bothered by any of the following problems?Feeling down, depressed, or hopeless?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Stress means a situation in which a person feels tense, restless, nervous, or anxious"), pm.getParamV("Stress means a situation in which a person feels tense, restless, nervous, or anxious"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Because of a physical, mental, or emotional condition, do you have serious difficulty concentrating"), pm.getParamV("Because of a physical, mental, or emotional condition, do you have serious difficulty concentrating"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Because of a physical, mental, or emotional condition, do you have difficulty doing errands alone"), pm.getParamV("Because of a physical, mental, or emotional condition, do you have difficulty doing errands alone"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify HRSN Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('HRSN - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('HRSN - DISABILITIES SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "DISABILITIES SCREEN"))).getText(), pm.getParamV("DISABILITIES SCREEN"));
        base.compareValues('HRSN - DISABILITIES SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "DISABILITIES SUM"))).getText(), pm.getParamV("DISABILITIES SUM"));
        base.compareValues('HRSN - STRESS SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "STRESS SCREEN"))).getText(), pm.getParamV("STRESS SCREEN"));
        base.compareValues('HRSN - STRESS SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "STRESS SUM"))).getText(), pm.getParamV("STRESS SUM"));
        base.compareValues('HRSN - MENTALHEALTH SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "MENTAL HEALTH SCREEN"))).getText(), pm.getParamV("MENTALHEALTH SCREEN"));
        base.compareValues('HRSN - MENTALHEALTH SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "MENTAL HEALTH SUM"))).getText(), pm.getParamV("MENTALHEALTH SUM"));
        base.compareValues('HRSN - SUBSTANCE SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "SUBSTANCE SCREEN"))).getText(), pm.getParamV("SUBSTANCE SCREEN"));
        base.compareValues('HRSN - SUBSTANCE SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "SUBSTANCE SUM"))).getText(), pm.getParamV("SUBSTANCE SUM"));
        base.compareValues('HRSN - ACTIVITY SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "ACTIVITY SCREEN"))).getText(), pm.getParamV("ACTIVITY SCREEN"));
        base.compareValues('HRSN - ACTIVITY SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "ACTIVITY SUM"))).getText(), pm.getParamV("ACTIVITY SUM"));
        base.compareValues('HRSN - EDUCATION SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "EDUCATION SCREEN"))).getText(), pm.getParamV("EDUCATION SCREEN"));
        base.compareValues('HRSN - EDUCATION SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "EDUCATION SUM"))).getText(), pm.getParamV("EDUCATION SUM"));
        base.compareValues('HRSN - SUPPORT SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "SUPPORT SCREEN"))).getText(), pm.getParamV("SUPPORT SCREEN"));
        base.compareValues('HRSN - SUPPORT SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "SUPPORT SUM"))).getText(), pm.getParamV("SUPPORT SUM"));
        base.compareValues('HRSN - EMPLOYMENT SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "EMPLOYMENT SCREEN"))).getText(), pm.getParamV("EMPLOYMENT SCREEN"));
        base.compareValues('HRSN - EMPLOYMENT SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "EMPLOYMENT SUM"))).getText(), pm.getParamV("EMPLOYMENT SUM"));
        base.compareValues('HRSN - FINANCIAL SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "FINANCIAL SCREEN"))).getText(), pm.getParamV("FINANCIAL SCREEN"));
        base.compareValues('HRSN - FINANCIAL SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "FINANCIAL SUM"))).getText(), pm.getParamV("FINANCIAL SUM"));
        base.compareValues('HRSN - SAFETY  SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "SAFETY  SCREEN"))).getText(), pm.getParamV("SAFETY SCREEN"));
        base.compareValues('HRSN - SAFETY  SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "SAFETY  SUM"))).getText(), pm.getParamV("SAFETY SUM"));
        base.compareValues('HRSN - UTILITIES SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "UTILITIES SCREEN"))).getText(), pm.getParamV("UTILITIES SCREEN"));
        base.compareValues('HRSN - UTILITIES SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "UTILITIES SUM"))).getText(), pm.getParamV("UTILITIES SUM"));
        base.compareValues('HRSN - TRANSPORT SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "TRANSPORT SCREEN"))).getText(), pm.getParamV("TRANSPORT SCREEN"));
        base.compareValues('HRSN - TRANSPORT SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "TRANSPORT SUM"))).getText(), pm.getParamV("TRANSPORT SUM"));
        base.compareValues('HRSN - FOOD  SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "FOOD  SCREEN"))).getText(), pm.getParamV("FOOD SCREEN"));
        base.compareValues('HRSN - FOOD SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "FOOD  SUM"))).getText(), pm.getParamV("FOOD SUM"));
        base.compareValues('HRSN - LIVING SCREEN', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "LIVING SCREEN"))).getText(), pm.getParamV("LIVING SCREEN"));
        base.compareValues('HRSN - LIVING SUM', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "LIVING SUM"))).getText(), pm.getParamV("LIVING SUM"));
        //base.compareValues('HRSN - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasksHRSN(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('HRSN - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in HRSNS Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "What is your living situation today?"), pm.getParamV("What is your living situation today?"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Think about the place you live"), pm.getParamV("Think about the place you live"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "you worried that your food would run out before you got money to buy more"), pm.getParamV("you worried that your food would run out before you got money to buy more"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "have money to get more"), pm.getParamV("have money to get more"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "In the past 12 months, has lack of reliable transportation kept you from medical appointments"), pm.getParamV("In the past 12 months, has lack of reliable transportation kept you from medical appointments"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "In the past 12 months has the electric, gas, oil, or water company threatened to shutoff services"), pm.getParamV("In the past 12 months has the electric, gas, oil, or water company threatened to shutoff services"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often does anyone, including family and friends, physically hurt you?"), pm.getParamV("How often does anyone, including family and friends, physically hurt you?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often does anyone, including family and friends, insult or talk down to you?"), pm.getParamV("How often does anyone, including family and friends, insult or talk down to you?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often does anyone, including family and friends, threaten you with harm?"), pm.getParamV("How often does anyone, including family and friends, threaten you with harm?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often does anyone, including family and friends, scream or curse at you?"), pm.getParamV("How often does anyone, including family and friends, scream or curse at you?"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        return true;
    });
});
cucumber_1.Then('Verify HRSNS Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('HRSNS - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('HRSNS - SAFETY', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "SAFETY"))).getText(), pm.getParamV("SAFETY"));
        base.compareValues('HRSNS - UTILITIES', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "UTILITIES"))).getText(), pm.getParamV("UTILITIES"));
        base.compareValues('HRSNS - TRANSPORTATION', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "TRANSPORTATION"))).getText(), pm.getParamV("TRANSPORT"));
        base.compareValues('HRSNS - FOOD', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "FOOD"))).getText(), pm.getParamV("FOOD"));
        base.compareValues('HRSNS - LIVING SITUATION', yield protractor_1.element(protractor_1.by.xpath(mpage.m_hrsn_score_type.replace("$replaceToken$", "LIVING SITUATION"))).getText(), pm.getParamV("LIVING"));
        //base.compareValues('HRSNS - FOLLOW_UP_TASKS', base.verifyAssessmentsFollowupTasksHRSNS(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('HRSNS - FOLLOW_UP_TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in IVRP Intake Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "How well has the member adopted the technology?"), pm.getParamV("How well has the member adopted the technology?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "What is the highest level of education you"), pm.getParamV("What is the highest level of education you"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "What type of violence situation"), pm.getParamV("What type of violence situation"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Is the member a"), pm.getParamV("Is the member a"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Do you experience any of these stressors in your life?"), pm.getParamV("Do you experience any of these stressors in your life?"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Do you or anyone in your family have a restraining order?"), pm.getParamV("Do you or anyone in your family have a restraining order?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Is there an indication of violence"), pm.getParamV("Is there an indication of violence"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Why?"), pm.getParamV("Why?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "If further investigation"), pm.getParamV("If further investigation"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Low Risk Factors"), pm.getParamV("Low Risk Factors"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Moderate Risk Factors"), pm.getParamV("Moderate Risk Factors"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "High Risk Factors"), pm.getParamV("High Risk Factors"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Needs Supervisor Review"), pm.getParamV("Needs Supervisor Review"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "have you experienced physical harm"), pm.getParamV("have you experienced physical harm"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "have you experienced emotional abuse"), pm.getParamV("have you experienced emotional abuse"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "incarceration history?"), pm.getParamV("incarceration history?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "If incarcerated in the last 1 year or currently incarcerated"), pm.getParamV("If incarcerated in the last 1 year or currently incarcerated"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Other Notes about this Member?"), pm.getParamV("Other Notes about this Member?"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        return true;
    });
});
cucumber_1.Then('Verify IVRP Intake Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('IVRP - How well has the member adopted the technology?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "How well has the member adopted the technology?"))).getText(), pm.getParamV("How well has the member adopted the technology?"));
        //base.compareValues('IVRP - What is the highest level of education you', await element(by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "What is the highest level of education you"))).getText(), pm.getParamV("What is the highest level of education you"));
        base.compareValues('IVRP - What type of violence situation', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "What type of violence situation"))).getText(), pm.getParamV("What type of violence situation"));
        base.compareValues('IVRP - Is the member a', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Is the member a"))).getText(), pm.getParamV("Is the member a"));
        base.compareValues('IVRP - Do you experience any of these stressors in your life?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Do you experience any of these stressors in your life?"))).getText(), pm.getParamV("Do you experience any of these stressors in your life?"));
        base.compareValues('IVRP - Do you or anyone in your family have a restraining order?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Do you or anyone in your family have a restraining order?"))).getText(), pm.getParamV("Do you or anyone in your family have a restraining order?"));
        base.compareValues('IVRP - Is there an indication of violence', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Is there an indication of violence"))).getText(), pm.getParamV("Is there an indication of violence"));
        base.compareValues('IVRP - Why?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Why?"))).getText(), pm.getParamV("Why?"));
        base.compareValues('IVRP - If further investigation', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "If further investigation"))).getText(), pm.getParamV("If further investigation"));
        base.compareValues('IVRP - Low Risk Factors', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Low Risk Factors"))).getText(), pm.getParamV("Low Risk Factors"));
        base.compareValues('IVRP - Moderate Risk Factors', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Moderate Risk Factors"))).getText(), pm.getParamV("Moderate Risk Factors"));
        base.compareValues('IVRP - High Risk Factors', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "High Risk Factors"))).getText(), pm.getParamV("High Risk Factors"));
        base.compareValues('IVRP - Needs Supervisor Review', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Needs Supervisor Review"))).getText(), pm.getParamV("Needs Supervisor Review"));
        base.compareValues('IVRP - have you experienced physical harm', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "have you experienced physical harm"))).getText(), pm.getParamV("have you experienced physical harm"));
        base.compareValues('IVRP - have you experienced emotional abuse', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "have you experienced emotional abuse"))).getText(), pm.getParamV("have you experienced emotional abuse"));
        base.compareValues('IVRP - incarceration history?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "incarceration history?"))).getText(), pm.getParamV("incarceration history?"));
        base.compareValues('IVRP - If incarcerated in the last 1 year or currently incarcerated', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "If incarcerated in the last 1 year or currently incarcerated"))).getText(), pm.getParamV("If incarcerated in the last 1 year or currently incarcerated"));
        base.compareValues('IVRP - Other Notes about this Member?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Other Notes about this Member?"))).getText(), pm.getParamV("Other Notes about this Member?"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in Single Question Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        const arr = pm.getPMap();
        for (const key of Object.keys(arr)) {
            yield base.setChips_singleSelect(mpage.assess_single.replace('$paramName$', key), pm.getParamV(key));
        }
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify Single Question Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('Single Question - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('Single Question - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('Single Question - TOTAL_DESC', yield mpage.assess_total_desc.getText(), pm.getParamV("TOTAL_DESC"));
        //base.compareValues('Single Question - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasksHRSNS(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('Single Question - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in GAD7 Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Feeling nervous"), pm.getParamV("Feeling nervous"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Not being able to stop or control worrying?"), pm.getParamV("Not being able to stop or control worrying?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Worrying too much about different things?"), pm.getParamV("Worrying too much about different things?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Worrying too much about different things?"), pm.getParamV("Worrying too much about different things?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Trouble relaxing?"), pm.getParamV("Trouble relaxing?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Being so restless"), pm.getParamV("Being so restless"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Becoming easily annoyed or irritable?"), pm.getParamV("Becoming easily annoyed or irritable?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Feeling afraid as if something awful might happen?"), pm.getParamV("Feeling afraid as if something awful might happen?"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        return true;
        // pm.dataTableV(dataTable);
        // const arr = pm.getPMap();
        // for (const key of Object.keys(arr)) {
        //   await base.setChips_singleSelect(mpage.assess_single.replace('$paramName$', key), pm.getParamV(key));
        // }
        // await browser.getTitle().then(function (text) {
        //   expect(text).to.equal("mMR");
        // })
        // const screenshot = await browser.takeScreenshot();
        // this.attach(screenshot, "image/png");
        // return true;
    });
});
cucumber_1.Then('Verify GAD7 Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('GAD7 - Risk-Check', yield mpage.assess_risk.getText(), pm.getParamV("RISK"));
        base.compareValues('GAD7 - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('GAD7 - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('GAD7 - TOTAL_DESC', yield mpage.assess_total_desc.getText(), pm.getParamV("TOTAL_DESC"));
        //base.compareValues('GAD7 - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasksGAD7(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('GAD7 - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in PCL5 Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Repeated, disturbing and unwanted memories of the stressful experience?"), pm.getParamV("Repeated, disturbing and unwanted memories of the stressful experience?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Repeated, disturbing dreams of the stressful experience?"), pm.getParamV("Repeated, disturbing dreams of the stressful experience?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Suddenly feeling or acting as if the stressful experience were actually happening again"), pm.getParamV("Suddenly feeling or acting as if the stressful experience were actually happening again"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Suddenly feeling or acting as if the stressful experience were actually happening again"), pm.getParamV("Suddenly feeling or acting as if the stressful experience were actually happening again"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Feeling very upset when something reminded you of the stressful experience?"), pm.getParamV("Feeling very upset when something reminded you of the stressful experience?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Having strong physical reactions when something reminded you of the stressful experience"), pm.getParamV("Having strong physical reactions when something reminded you of the stressful experience"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "thoughts or feelings related to the stressful experience?"), pm.getParamV("thoughts or feelings related to the stressful experience?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Avoiding external reminders of the stressful experience"), pm.getParamV("Avoiding external reminders of the stressful experience"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Trouble remembering important parts of the stressful experience?"), pm.getParamV("Trouble remembering important parts of the stressful experience?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Having strong negative beliefs about yourself"), pm.getParamV("Having strong negative beliefs about yourself"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Blaming yourself or someone else for the stressful experience or what happened after it?"), pm.getParamV("Blaming yourself or someone else for the stressful experience or what happened after it?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Having strong negative feelings such as fear"), pm.getParamV("Having strong negative feelings such as fear"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Loss of interest in activities that you used to enjoy?"), pm.getParamV("Loss of interest in activities that you used to enjoy?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Feeling distant or cut off from other people?"), pm.getParamV("Feeling distant or cut off from other people?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Trouble experiencing positive feelings"), pm.getParamV("Trouble experiencing positive feelings"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Irritable behavior"), pm.getParamV("Irritable behavior"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Taking too many risks or doing things that could cause you harm?"), pm.getParamV("Taking too many risks or doing things that could cause you harm?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "or watchful or on guard?"), pm.getParamV("or watchful or on guard?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Feeling jumpy or easily startled?"), pm.getParamV("Feeling jumpy or easily startled?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Having difficulty concentrating?"), pm.getParamV("Having difficulty concentrating?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Trouble falling or staying asleep?"), pm.getParamV("Trouble falling or staying asleep?"));
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify PCL5 Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('PCL5 - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('PCL5 - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('PCL5 - TOTAL_DESC', yield mpage.assess_total_desc.getText(), pm.getParamV("TOTAL_DESC"));
        //base.compareValues('PCL5 - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasksPCL5(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('PCL5 - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in MDQ Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "you shouted at people or started fights or arguments?"), pm.getParamV("you shouted at people or started fights or arguments?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "...you felt so good or so hyper that other people thought you were not your normal self or you were so hyper that you got into trouble?"), pm.getParamV("...you felt so good or so hyper that other people thought you were not your normal self or you were so hyper that you got into trouble?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "...you felt much more self-confident than usual?"), pm.getParamV("...you felt much more self-confident than usual?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "...you felt much more self-confident than usual?"), pm.getParamV("...you felt much more self-confident than usual?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "you got much less sleep than usual and found"), pm.getParamV("you got much less sleep than usual and found"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "you were much more talkative or spoke much faster than usual?"), pm.getParamV("you were much more talkative or spoke much faster than usual?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "you were much more talkative or spoke much faster than usual?"), pm.getParamV("you were much more talkative or spoke much faster than usual?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "thoughts raced through your head"), pm.getParamV("thoughts raced through your head"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "you were so easily distracted by things around you"), pm.getParamV("you were so easily distracted by things around you"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "you had much more energy than usual?"), pm.getParamV("you had much more energy than usual?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "you were much more active or did many more things than usual?"), pm.getParamV("you were much more active or did many more things than usual?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "you were much more social or outgoing than usual"), pm.getParamV("you were much more social or outgoing than usual"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "you were much more interested in sex than usual?"), pm.getParamV("you were much more interested in sex than usual?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "you did things that were unusual for you or that other people might have thought were excessive"), pm.getParamV("you did things that were unusual for you or that other people might have thought were excessive"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "spending money got you or your family into trouble?"), pm.getParamV("spending money got you or your family into trouble?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "If you checked YES to more than one of the above"), pm.getParamV("If you checked YES to more than one of the above"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How much of a problem did any of these cause you"), pm.getParamV("How much of a problem did any of these cause you"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have any of your blood relatives"), pm.getParamV("Have any of your blood relatives"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Has a health professional"), pm.getParamV("Has a health professional"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify MDQ Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('MDQ - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('MDQ - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('MDQ - TOTAL_DESC', yield mpage.assess_total_desc.getText(), pm.getParamV("TOTAL_DESC"));
        //base.compareValues('MDQ - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasksMDQ(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('MDQ - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in Columbia Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "In the past month, Have you wished you were dead or wished you could go to sleep and not wake up?"), pm.getParamV("In the past month, Have you wished you were dead or wished you could go to sleep and not wake up?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "anything to end your life?"), pm.getParamV("anything to end your life?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "anything to end your life?"), pm.getParamV("anything to end your life?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Was this within the past 3 months?"), pm.getParamV("Was this within the past 3 months?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you had any actual thoughts of killing yourself?"), pm.getParamV("Have you had any actual thoughts of killing yourself?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you had any actual thoughts of killing yourself?"), pm.getParamV("Have you had any actual thoughts of killing yourself?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you been thinking about how you might do this?"), pm.getParamV("Have you been thinking about how you might do this?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you had these thoughts and had some intention of acting on them?"), pm.getParamV("Have you had these thoughts and had some intention of acting on them?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you started to work out or worked out the details of how to kill yourself?"), pm.getParamV("Have you started to work out or worked out the details of how to kill yourself?"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
        // pm.dataTableV(dataTable);
        // const arr = pm.getPMap();
        // for (const key of Object.keys(arr)) {
        //   await base.setChips_singleSelect(mpage.assess_single.replace('$paramName$', key), pm.getParamV(key));
        // }
        // await browser.getTitle().then(function (text) {
        //   expect(text).to.equal("mMR");
        // })
        // const screenshot = await browser.takeScreenshot();
        // this.attach(screenshot, "image/png");
        // return true;
    });
});
cucumber_1.Then('Verify Columbia Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('Columbia - Have you wished you were dead or wished you could go to sleep and not wake up?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_columbia_responses.replace("$replaceToken$", "In the past month, Have you wished you were dead or wished you could go to sleep and not wake up?"))).getText(), pm.getParamV("In the past month, Have you wished you were dead or wished you could go to sleep and not wake up?"));
        base.compareValues('Columbia - anything to end your life?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_columbia_responses.replace("$replaceToken$", "anything to end your life?"))).getText(), pm.getParamV("anything to end your life?"));
        base.compareValues('Columbia - Was this within the past 3 months?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_columbia_responses.replace("$replaceToken$", "Was this within the past 3 months?"))).getText(), pm.getParamV("Was this within the past 3 months?"));
        base.compareValues('Columbia - Have you had any actual thoughts of killing yourself?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_columbia_responses.replace("$replaceToken$", "Have you had any actual thoughts of killing yourself?"))).getText(), pm.getParamV("Have you had any actual thoughts of killing yourself?"));
        base.compareValues('Columbia - Have you been thinking about how you might do this?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_columbia_responses.replace("$replaceToken$", "Have you been thinking about how you might do this?"))).getText(), pm.getParamV("Have you been thinking about how you might do this?"));
        base.compareValues('Columbia - Have you had these thoughts and had some intention of acting on them?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_columbia_responses.replace("$replaceToken$", "Have you had these thoughts and had some intention of acting on them?"))).getText(), pm.getParamV("Have you had these thoughts and had some intention of acting on them?"));
        base.compareValues('Columbia - Have you started to work out or worked out the details of how to kill yourself?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_columbia_responses.replace("$replaceToken$", "Have you started to work out or worked out the details of how to kill yourself?"))).getText(), pm.getParamV("Have you started to work out or worked out the details of how to kill yourself?"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in Psychosis Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you ever hear things"), pm.getParamV("Do you ever hear things"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you ever receive special messages"), pm.getParamV("Do you ever receive special messages"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you ever feel like people are spying on your or out to hurt you?"), pm.getParamV("Do you ever feel like people are spying on your or out to hurt you?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you ever feel like people are spying on your or out to hurt you?"), pm.getParamV("Do you ever feel like people are spying on your or out to hurt you?"));
        // const arr = pm.getPMap();
        // for (const key of Object.keys(arr)) {
        //   await base.setChips_singleSelect(mpage.assess_single.replace('$paramName$', key), pm.getParamV(key));
        // }
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify Psychosis Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('Psychosis - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('Psychosis - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('Psychosis - TOTAL_DESC', yield mpage.assess_total_desc.getText(), pm.getParamV("TOTAL_DESC"));
        //base.compareValues('Psychosis - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasksPsychosis(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('Psychosis - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in AUDIT10 Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often do you have a drink containing alcohol?"), pm.getParamV("How often do you have a drink containing alcohol?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How many drinks containing alcohol do you have on a typical day when you are drinking?"), pm.getParamV("How many drinks containing alcohol do you have on a typical day when you are drinking?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How many drinks containing alcohol do you have on a typical day when you are drinking?"), pm.getParamV("How many drinks containing alcohol do you have on a typical day when you are drinking?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often do you have six or more drinks on one occasion?"), pm.getParamV("How often do you have six or more drinks on one occasion?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often during the last year have you found that you were not able to stop drinking"), pm.getParamV("How often during the last year have you found that you were not able to stop drinking"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often during the last year have you found that you were not able to stop drinking"), pm.getParamV("How often during the last year have you found that you were not able to stop drinking"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often during the last year have you failed to do what was normally expected from you"), pm.getParamV("How often during the last year have you failed to do what was normally expected from you"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often during the last year have you needed a first drink in the morning"), pm.getParamV("How often during the last year have you needed a first drink in the morning"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often during the last year have you had a feeling of guilt"), pm.getParamV("How often during the last year have you had a feeling of guilt"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How often during the last year have you been unable to remember what happened the night before"), pm.getParamV("How often during the last year have you been unable to remember what happened the night before"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you or someone else been injured as a result of your drinking?"), pm.getParamV("Have you or someone else been injured as a result of your drinking?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Has a relative or friend or a doctor or another health worker been concerned about your drinking"), pm.getParamV("Has a relative or friend or a doctor or another health worker been concerned about your drinking"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
        // pm.dataTableV(dataTable);
        // const arr = pm.getPMap();
        // for (const key of Object.keys(arr)) {
        //   await base.setChips_singleSelect(mpage.assess_single.replace('$paramName$', key), pm.getParamV(key));
        // }
        // await browser.getTitle().then(function (text) {
        //   expect(text).to.equal("mMR");
        // })
        // const screenshot = await browser.takeScreenshot();
        // this.attach(screenshot, "image/png");
        // return true;
    });
});
cucumber_1.Then('Verify AUDIT10 Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('AUDIT10 - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('AUDIT10 - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('AUDIT10 - TOTAL_DESC', yield mpage.assess_total_desc.getText(), pm.getParamV("TOTAL_DESC"));
        //base.compareValues('AUDIT10 - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasksAUDIT10(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('AUDIT10 - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in DAST10 Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you used drugs other than those required for medical reasons?"), pm.getParamV("Have you used drugs other than those required for medical reasons?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you abuse more than one drug at a time?"), pm.getParamV("Do you abuse more than one drug at a time?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Are you always able to stop using drugs when you want to?"), pm.getParamV("Are you always able to stop using drugs when you want to?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Are you always able to stop using drugs when you want to?"), pm.getParamV("Are you always able to stop using drugs when you want to?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "flashbacks"), pm.getParamV("flashbacks"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you ever feel bad or guilty about your drug use?"), pm.getParamV("Do you ever feel bad or guilty about your drug use?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "ever complain about your involvement with drugs?"), pm.getParamV("ever complain about your involvement with drugs?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you neglected your family because of your use of drugs?"), pm.getParamV("Have you neglected your family because of your use of drugs?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you engaged in illegal activities in order to obtain drugs?"), pm.getParamV("Have you engaged in illegal activities in order to obtain drugs?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you ever experienced withdrawal symptoms"), pm.getParamV("Have you ever experienced withdrawal symptoms"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you had medical problems as a result of your drug use"), pm.getParamV("Have you had medical problems as a result of your drug use"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify DAST10 Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('DAST10 - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('DAST10 - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('DAST10 - TOTAL_DESC', yield mpage.assess_total_desc.getText(), pm.getParamV("TOTAL_DESC"));
        //base.compareValues('DAST10 - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasksDAST10(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('DAST10 - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in NIDA Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "more drinks a day"), pm.getParamV("more drinks a day"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Tobacco Products"), pm.getParamV("Tobacco Products"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Prescription drugs for non-medical reasons"), pm.getParamV("Prescription drugs for non-medical reasons"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Prescription drugs for non-medical reasons"), pm.getParamV("Prescription drugs for non-medical reasons"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Illegal Drugs"), pm.getParamV("Illegal Drugs"));
        // const arr = pm.getPMap();
        // for (const key of Object.keys(arr)) {
        //   await base.setChips_singleSelect(mpage.assess_single.replace('$paramName$', key), pm.getParamV(key));
        // }
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify NIDA Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        //base.compareValues('NIDA - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasksNIDA(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('NIDA - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in MiniMental Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "season"), pm.getParamV("season"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Where are we"), pm.getParamV("hospital"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Then ask the patient all 3 after you have said them"), pm.getParamV("Then ask the patient all 3 after you have said them"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Repeat them until he/she learns all 3. Count trials and record below."), pm.getParamV("Repeat them until he/she learns all 3. Count trials and record below."));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Serial 7"), pm.getParamV("Serial 7"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Ask for the 3 objects repeated above"), pm.getParamV("Ask for the 3 objects repeated above"));
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in MiniMental Assessment1', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "season"), pm.getParamV("season"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Where are we"), pm.getParamV("hospital"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Then ask the patient all 3 after you have said them"), pm.getParamV("Then ask the patient all 3 after you have said them"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Repeat them until he/she learns all 3. Count trials and record below."), pm.getParamV("Repeat them until he/she learns all 3. Count trials and record below."));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Serial 7"), pm.getParamV("Serial 7"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Ask for the 3 objects repeated above"), pm.getParamV("Ask for the 3 objects repeated above"));
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify MiniMental Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('MiniMental - TITLE', yield mpage.assess_title.getText(), pm.getParamV("TITLE"));
        base.compareValues('MiniMental - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('MiniMental - TOTAL_DESC', yield mpage.assess_total_desc.getText(), pm.getParamV("TOTAL_DESC"));
        //base.compareValues('MiniMental - FOLLOW UP TASKS', base.verifyAssessmentsFollowupTasksNIDA(mpage.m_m3_followup.getText()), pm.getParamV("FOLLOW_UP_TASKS"));
        base.compareValues('MiniMental - FOLLOW UP TASKS', yield base.verifyAssessmentsFollowupTask(), pm.getParamV("FOLLOW_UP_TASKS"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then("Enter Data in CCI_V2 Assessment", function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Psychosocial history"), pm.getParamV("Psychosocial history"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Living situation"), pm.getParamV("Living situation"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Highest level of Education"), pm.getParamV("Highest level of Education"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Employment Status"), pm.getParamV("Employment Status"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Military Hx"), pm.getParamV("Military Hx"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Legal Hx"), pm.getParamV("Legal Hx"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Current Behavioral health"), pm.getParamV("Current Behavioral health"));
        yield base.setChips_multiSelect(mpage.nida_single.replace("$paramName$", "Alcohol, (5 for men, 4 for women) or more drinks a day"), pm.getParamV("Alcohol, (5 for men, 4 for women) or more drinks a day"));
        yield base.setChips_multiSelect(mpage.nida_single.replace("$paramName$", "Tobacco Products"), pm.getParamV("Tobacco Products"));
        yield base.setChips_multiSelect(mpage.nida_single.replace("$paramName$", "Prescription drugs for non-medical reasons"), pm.getParamV("Prescription drugs for non-medical reasons"));
        yield base.setChips_multiSelect(mpage.nida_single.replace("$paramName$", "Illegal Drugs"), pm.getParamV("Illegal Drugs"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Current stressors"), pm.getParamV("Current stressors"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Strengths/Supports/Hobbies"), pm.getParamV("Strengths/Supports/Hobbies"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Current Suicidality"), pm.getParamV("Current Suicidality"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Current Homicidality"), pm.getParamV("Current Homicidality"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Sleep"), pm.getParamV("Sleep"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Exercise"), pm.getParamV("Exercise"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Previous behavioral Health dx"), pm.getParamV("Previous behavioral Health dx"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "medications/dates/effectiveness"), pm.getParamV("medications/dates/effectiveness"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "non-medication treatment/dates/effectiveness"), pm.getParamV("non-medication treatment/dates/effectiveness"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Trauma"), pm.getParamV("Trauma"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Suicide Attempts and Self-harm history"), pm.getParamV("Suicide Attempts and Self-harm history"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Family hx of behavioral health conditions"), pm.getParamV("Family hx of behavioral health conditions"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Family hx of Substance Use Disorder"), pm.getParamV("Family hx of Substance Use Disorder"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Family hx of Suicide attempts"), pm.getParamV("Family hx of Suicide attempts"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Family Hx of Violent Behavior"), pm.getParamV("Family Hx of Violent Behavior"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Current medical problems"), pm.getParamV("Current medical problems"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Allergies"), pm.getParamV("Allergies"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Pregnant/Breastfeeding"), pm.getParamV("Pregnant/Breastfeeding"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Psychotropic Medications"), pm.getParamV("Psychotropic Medications"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Other Medications"), pm.getParamV("Other Medications"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Level of medication adherence"), pm.getParamV("Level of medication adherence"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Patients goals"), pm.getParamV("Patients goals"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Interested in treatment"), pm.getParamV("Interested in treatment"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Speech"), pm.getParamV("Speech"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Affect"), pm.getParamV("Affect"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Mood"), pm.getParamV("Mood"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Orientation"), pm.getParamV("Orientation"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Memory"), pm.getParamV("Memory"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Attention"), pm.getParamV("Attention"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Hallucination"), pm.getParamV("Hallucination"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Thoughts"), pm.getParamV("Thoughts"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Behavior"), pm.getParamV("Behavior"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Insight"), pm.getParamV("Insight"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Judgement"), pm.getParamV("Judgement"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Impulse control"), pm.getParamV("Impulse control"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Diagnostic impressions"), pm.getParamV("Diagnostic impressions"));
        if (pm.getParamV("AutoFill") == 'Yes') {
            yield base.clickAutofill(mpage.Autofill);
        }
        protractor_1.browser.sleep(3000);
        //await mpage.m_submit_btn.click();
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then("Enter Data in EPDS Assessment", function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have been able to laugh and see the funny side of things"), pm.getParamV("I have been able to laugh and see the funny side of things"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have looked forward with enjoyment to things"), pm.getParamV("I have looked forward with enjoyment to things"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have blamed myself unnecessarily when things went wrong"), pm.getParamV("I have blamed myself unnecessarily when things went wrong"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have blamed myself unnecessarily when things went wrong"), pm.getParamV("I have blamed myself unnecessarily when things went wrong"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have been anxious or worried for no good reason"), pm.getParamV("I have been anxious or worried for no good reason"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have felt scared or panicky for no very good reason"), pm.getParamV("I have felt scared or panicky for no very good reason"));
        yield base.setChips_singleSelect(mpage.assess_single.replace("$paramName$", "Things have been getting on top of me"), pm.getParamV("Things have been getting on top of me"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have been so unhappy that I have had difficulty sleeping"), pm.getParamV("I have been so unhappy that I have had difficulty sleeping"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have felt sad or miserable"), pm.getParamV("I have felt sad or miserable"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "I have been so unhappy that I have been crying"), pm.getParamV("I have been so unhappy that I have been crying"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "The thought of harming myself has occurred to me"), pm.getParamV("The thought of harming myself has occurred to me"));
        protractor_1.browser.sleep(3000);
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Verify EPDS Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('EPDS - TOTAL_SCORE', yield mpage.assess_total.getText(), pm.getParamV("TOTAL_SCORE"));
        base.compareValues('EPDS - SELF-HARM SYMPTOM SCORE', yield protractor_1.element(protractor_1.by.xpath(mpage.m_m3_score_type1.replace("$replaceToken$", "Self Harm"))).getText(), pm.getParamV("SELF_HARM_SCORE"));
        base.compareValues('EPDS - SELF_HARM_ALERT', base.verifySelfHarmAlert(base.getSize(mpage.m_m3_selfharmalert)), pm.getParamV("SELF_HARM_ALERT"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('click on assessment score', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableH(dataTable);
        var m_assessment_score = mpage.m_assessment_score_str.replace("$replaceToken$", pm.getParamH("Name"));
        base.WaitforElementPresence(protractor_1.element(protractor_1.by.xpath(m_assessment_score)));
        yield protractor_1.element(protractor_1.by.xpath(m_assessment_score)).click();
        base.UrlContains("status=taken");
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('user clicks on left nav item in Member Platform', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableH(dataTable);
        var menuItemXpath = "//div[@id='nav_menu_icon_$replaceToken$']";
        menuItemXpath = menuItemXpath.replace("$replaceToken$", pm.getParamH("name").toLowerCase());
        yield protractor_1.element(protractor_1.by.xpath(menuItemXpath)).click();
        protractor_1.browser.sleep(4000);
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
    });
});
cucumber_1.Then('user clicks on Dashboard in Member Platform Home Page', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableH(dataTable);
        var menuItemXpath = "//div[@class='menuitem-text'][contains(@id,'dashboard')][contains(.,'$replaceToken$')]";
        menuItemXpath = menuItemXpath.replace("$replaceToken$", pm.getParamH("name"));
        yield protractor_1.element(protractor_1.by.xpath(menuItemXpath)).click();
        protractor_1.browser.sleep(4000);
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
    });
});
cucumber_1.Then('Close Self Harm Pop Up', function () {
    return __awaiter(this, void 0, void 0, function* () {
        protractor_1.browser.sleep(4000);
        if (mpage.m_m3_selfharmalert_close.isDisplayed) {
            yield mpage.m_m3_selfharmalert_close.click();
            protractor_1.browser.sleep(4000);
            yield protractor_1.browser.getTitle().then(function (text) {
                expect(text).to.equal("mMR");
            });
            const screenshot = yield protractor_1.browser.takeScreenshot();
            this.attach(screenshot, "image/png");
        }
        // sleep(5);
        // if(getSize(jsonData(objects,"m_m3_selfharmalert_close"))>0) {
        //   findElement(jsonData(objects,"m_m3_selfharmalert_close")).click();
        // }
    });
});
cucumber_1.Then('Enter Data in COVID-19 Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Has there been any changes with your job"), pm.getParamV("Has there been any changes with your job"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Has your income reduced because of COVID-19"), pm.getParamV("Has your income reduced because of COVID-19"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Has your income reduced because of COVID-19"), pm.getParamV("Has your income reduced because of COVID-19"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Are you quarantined"), pm.getParamV("Are you quarantined"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Are you quarantined"), pm.getParamV("Are you quarantined"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "What are your restrictions"), pm.getParamV("What are your restrictions"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Are you adhering to them"), pm.getParamV("Are you adhering to them"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "If not, what is difficult for you"), pm.getParamV("If not, what is difficult for you"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you understand why there are restrictions?"), pm.getParamV("Do you understand why there are restrictions?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "If this extends beyond current restrictions, do you have a plan"), pm.getParamV("If this extends beyond current restrictions, do you have a plan"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "What are the next steps for you"), pm.getParamV("What are the next steps for you"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Has COVID-19 had any effect on your anxiety"), pm.getParamV("Has COVID-19 had any effect on your anxiety"));
        yield base.setChips_multiSelect(mpage.assess_multinew.replace("$paramName$", "Select the changes that happened because of COVID-19."), pm.getParamV("Select the changes that happened because of COVID-19."));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How is your support system during this time"), pm.getParamV("How is your support system during this time"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "If you are quarantined, do you have ways to cope with isolation?"), pm.getParamV("If you are quarantined, do you have ways to cope with isolation?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you been ill lately with any type of respiratory illness, fever, cough, runny nose or general weakness or shortness of breath"), pm.getParamV("Have you been ill lately with any type of respiratory illness, fever, cough, runny nose or general weakness or shortness of breath"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you spent time with or have anyone visiting in your household who has recently returned from another country"), pm.getParamV("Have you spent time with or have anyone visiting in your household who has recently returned from another country"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "If they have had these symptoms or have them now, have you seen a doctor"), pm.getParamV("If they have had these symptoms or have them now, have you seen a doctor"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "If they have had these symptoms or have them now, have you been tested"), pm.getParamV("If they have had these symptoms or have them now, have you been tested"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Any other notes related to COVID-19"), pm.getParamV("Any other notes related to COVID-19"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        return true;
    });
});
cucumber_1.Then('Verify COVID-19 Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('COVID-19 - Has there been any changes with your job', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Has there been any changes with your job"))).getText(), pm.getParamV("Has there been any changes with your job"));
        base.compareValues('COVID-19 - Are you quarantined', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Are you quarantined"))).getText(), pm.getParamV("Are you quarantined"));
        base.compareValues('COVID-19 - Has your income reduced because of COVID-19', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Has your income reduced because of COVID-19"))).getText(), pm.getParamV("Has your income reduced because of COVID-19"));
        base.compareValues('COVID-19 - What are your restrictions', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "What are your restrictions"))).getText(), pm.getParamV("What are your restrictions"));
        base.compareValues('COVID-19 - Are you adhering to them', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Are you adhering to them"))).getText(), pm.getParamV("Are you adhering to them"));
        base.compareValues('COVID-19 - If not, what is difficult for you', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "If not, what is difficult for you"))).getText(), pm.getParamV("If not, what is difficult for you"));
        base.compareValues('COVID-19 - Do you understand why there are restrictions?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Do you understand why there are restrictions?"))).getText(), pm.getParamV("Do you understand why there are restrictions?"));
        base.compareValues('COVID-19 - If this extends beyond current restrictions, do you have a plan', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "If this extends beyond current restrictions, do you have a plan"))).getText(), pm.getParamV("If this extends beyond current restrictions, do you have a plan"));
        base.compareValues('COVID-19 - What are the next steps for you', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "What are the next steps for you"))).getText(), pm.getParamV("What are the next steps for you"));
        base.compareValues('COVID-19 - Has COVID-19 had any effect on your anxiety', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Has COVID-19 had any effect on your anxiety"))).getText(), pm.getParamV("Has COVID-19 had any effect on your anxiety"));
        base.compareValues('COVID-19 - Select the changes that happened because of COVID-19.', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Select the changes that happened because of COVID-19."))).getText(), pm.getParamV("Select the changes that happened because of COVID-19."));
        base.compareValues('COVID-19 - How is your support system during this time', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "How is your support system during this time"))).getText(), pm.getParamV("How is your support system during this time"));
        base.compareValues('COVID-19 - If you are quarantined, do you have ways to cope with isolation?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "If you are quarantined, do you have ways to cope with isolation?"))).getText(), pm.getParamV("If you are quarantined, do you have ways to cope with isolation?"));
        base.compareValues('COVID-19 - Have you been ill lately with any type of respiratory illness, fever, cough, runny nose or general weakness or shortness of breath', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Have you been ill lately with any type of respiratory illness, fever, cough, runny nose or general weakness or shortness of breath"))).getText(), pm.getParamV("Have you been ill lately with any type of respiratory illness, fever, cough, runny nose or general weakness or shortness of breath"));
        base.compareValues('COVID-19 - Have you spent time with or have anyone visiting in your household who has recently returned from another country', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Have you spent time with or have anyone visiting in your household who has recently returned from another country"))).getText(), pm.getParamV("Have you spent time with or have anyone visiting in your household who has recently returned from another country"));
        base.compareValues('COVID-19 - If they have had these symptoms or have them now, have you seen a doctor', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "If they have had these symptoms or have them now, have you seen a doctor"))).getText(), pm.getParamV("If they have had these symptoms or have them now, have you seen a doctor"));
        base.compareValues('COVID-19 - If they have had these symptoms or have them now, have you been tested', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "If they have had these symptoms or have them now, have you been tested"))).getText(), pm.getParamV("If they have had these symptoms or have them now, have you been tested"));
        base.compareValues('COVID-19 - Any other notes related to COVID-19', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Any other notes related to COVID-19"))).getText(), pm.getParamV("Any other notes related to COVID-19"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in P3 Intake Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.setDateField(mpage.m_select_date, pm.getParamV("When is your due date?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "How are you feeling about this pregnancy?"), pm.getParamV("How are you feeling about this pregnancy?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Does anyone smoke inside your home?"), pm.getParamV("Does anyone smoke inside your home?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Does anyone smoke inside your home?"), pm.getParamV("Does anyone smoke inside your home?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "What does your household use for drinking water?"), pm.getParamV("What does your household use for drinking water?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Does the refrigerator in your home work?"), pm.getParamV("Does the refrigerator in your home work?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Does the stove in your home work?"), pm.getParamV("Does the stove in your home work?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "In the past month, have there been days when you did not have enough food or money to buy food?"), pm.getParamV("In the past month, have there been days when you did not have enough food or money to buy food?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "When your new baby sleeps alone, is his or her crib or bed in the same room where you sleep?"), pm.getParamV("When your new baby sleeps alone, is his or her crib or bed in the same room where you sleep?"));
        yield base.setChips_multiSelect(mpage.assess_multinew.replace("$paramName$", "Listed below are some things about how babies sleep. How did your new baby usually sleep in the past 2 weeks?"), pm.getParamV("Listed below are some things about how babies sleep. How did your new baby usually sleep in the past 2 weeks?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you seen your doctor since you became pregnant?"), pm.getParamV("Have you seen your doctor since you became pregnant?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Is this your first pregnancy?"), pm.getParamV("Is this your first pregnancy?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How many babies are you having with this pregnancy?"), pm.getParamV("How many babies are you having with this pregnancy?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "How many other times have you been pregnant?"), pm.getParamV("How many other times have you been pregnant?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "How many children do you have?"), pm.getParamV("How many children do you have?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Number of babies born early?"), pm.getParamV("Number of babies born early?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Number of miscarriages?"), pm.getParamV("Number of miscarriages?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "List your health problems here, indicate None if none exists"), pm.getParamV("List your health problems here, indicate None if none exists"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "List any medications you are currently taking, indicate None if none exists"), pm.getParamV("List any medications you are currently taking, indicate None if none exists"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Have you recently stopped any medications?"), pm.getParamV("Have you recently stopped any medications?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Have you recently started any medications?"), pm.getParamV("Have you recently started any medications?"));
        yield base.setChips_multiSelect(mpage.assess_multinew.replace("$paramName$", "Which of these do you have?"), pm.getParamV("Which of these do you have?"));
        yield base.setChips_multiSelect(mpage.assess_multinew.replace("$paramName$", "Which of these do you take?"), pm.getParamV("Which of these do you take?"));
        yield base.setChips_multiSelect(mpage.assess_multinew.replace("$paramName$", "During the 3 months before you got pregnant with your new baby, did you have any of the following health conditions?"), pm.getParamV("During the 3 months before you got pregnant with your new baby, did you have any of the following health conditions?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "How many weeks or months pregnant were you when you had your first visit for prenatal care?"), pm.getParamV("How many weeks or months pregnant were you when you had your first visit for prenatal care?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How do you feel about your weight change since you became pregnant?"), pm.getParamV("How do you feel about your weight change since you became pregnant?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you follow any kind of special diet?"), pm.getParamV("Do you follow any kind of special diet?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you eat fruit every day?"), pm.getParamV("Do you eat fruit every day?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you eat vegetables every day?"), pm.getParamV("Do you eat vegetables every day?"));
        yield base.setChips_multiSelect(mpage.assess_multinew.replace("$paramName$", "Which of these do you drink everyday?"), pm.getParamV("Which of these do you drink everyday?"));
        yield base.setChips_multiSelect(mpage.assess_multinew.replace("$paramName$", "Check any of the following items you eat"), pm.getParamV("Check any of the following items you eat"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How does the amount of exercise you get now compare with before you were pregnant?"), pm.getParamV("How does the amount of exercise you get now compare with before you were pregnant?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Do you watch more than 2 hours of TV everyday?"), pm.getParamV("Do you watch more than 2 hours of TV everyday?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you thought about how you will feed your baby?"), pm.getParamV("Have you thought about how you will feed your baby?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you smoked any cigarettes in the past 2 years?"), pm.getParamV("Have you smoked any cigarettes in the past 2 years?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "In the 3 months before you got pregnant, how many cigarettes did you smoke on an average day? A pack has 20 cigarettes."), pm.getParamV("In the 3 months before you got pregnant, how many cigarettes did you smoke on an average day? A pack has 20 cigarettes."));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "In the last 3 months of your pregnancy, how many cigarettes did you smoke on an average day? A pack has 20 cigarettes."), pm.getParamV("In the last 3 months of your pregnancy, how many cigarettes did you smoke on an average day? A pack has 20 cigarettes."));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "How many cigarettes do you smoke on an average day now? A pack has 20 cigarettes."), pm.getParamV("How many cigarettes do you smoke on an average day now? A pack has 20 cigarettes."));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Have you had any alcoholic drinks in the past 2 years? A drink is 1 glass of wine, wine cooler, can or bottle of beer, shot of liquor, or mixed drink."), pm.getParamV("Have you had any alcoholic drinks in the past 2 years? A drink is 1 glass of wine, wine cooler, can or bottle of beer, shot of liquor, or mixed drink."));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "During the 3 months before you got pregnant, how many alcoholic drinks did you have in an average week?"), pm.getParamV("During the 3 months before you got pregnant, how many alcoholic drinks did you have in an average week?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "What concerns do you have about your health during this pregnancy?"), pm.getParamV("What concerns do you have about your health during this pregnancy?"));
    });
});
cucumber_1.Then('Enter Data in IVRP Intake2 Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "How well has the member adopted the technology?"), pm.getParamV("How well has the member adopted the technology?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "What is the highest level of education you"), pm.getParamV("What is the highest level of education you"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "What type of violence situation"), pm.getParamV("What type of violence situation"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Is the member a"), pm.getParamV("Is the member a"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Do you experience any of these stressors in your life?"), pm.getParamV("Do you experience any of these stressors in your life?"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Do you or anyone in your family have a restraining order?"), pm.getParamV("Do you or anyone in your family have a restraining order?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Is there an indication of violence"), pm.getParamV("Is there an indication of violence"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Why?"), pm.getParamV("Why?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "If further investigation"), pm.getParamV("If further investigation"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Other Notes about this Member?"), pm.getParamV("Other Notes about this Member?"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        return true;
    });
});
cucumber_1.Then('Verify IVRP Intake2 Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('IVRP Intake V2- How well has the member adopted the technology?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "How well has the member adopted the technology?"))).getText(), pm.getParamV("How well has the member adopted the technology?"));
        // base.compareValues('IVRP Intake V2 - What is the highest level of education you', await element(by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "What is the highest level of education you"))).getText(), pm.getParamV("What is the highest level of education you"));
        base.compareValues('IVRP Intake V2 - What type of violence situation', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "What type of violence situation"))).getText(), pm.getParamV("What type of violence situation"));
        base.compareValues('IVRP Intake V2 - Is the member a', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Is the member a"))).getText(), pm.getParamV("Is the member a"));
        base.compareValues('IVRP Intake V2 - Do you experience any of these stressors in your life?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Do you experience any of these stressors in your life?"))).getText(), pm.getParamV("Do you experience any of these stressors in your life?"));
        base.compareValues('IVRP Intake V2 - Do you or anyone in your family have a restraining order?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Do you or anyone in your family have a restraining order?"))).getText(), pm.getParamV("Do you or anyone in your family have a restraining order?"));
        base.compareValues('IVRP Intake V2 - Is there an indication of violence', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Is there an indication of violence"))).getText(), pm.getParamV("Is there an indication of violence"));
        base.compareValues('IVRP Intake V2 - Why?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Why?"))).getText(), pm.getParamV("Why?"));
        base.compareValues('IVRP Intake V2 - If further investigation', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "If further investigation"))).getText(), pm.getParamV("If further investigation"));
        base.compareValues('IVRP Intake V2- Other Notes about this Member?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Other Notes about this Member?"))).getText(), pm.getParamV("Other Notes about this Member?"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in IVRP Intake3 Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "How well has the member adopted the technology?"), pm.getParamV("How well has the member adopted the technology?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "What is the highest level of education you"), pm.getParamV("What is the highest level of education you"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "What type of violence situation"), pm.getParamV("What type of violence situation"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Is the member a"), pm.getParamV("Is the member a"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Do you experience any of these stressors in your life?"), pm.getParamV("Do you experience any of these stressors in your life?"));
        yield base.setChips_multiSelect(mpage.assess_multi.replace("$paramName$", "Do you or anyone in your family have a restraining order?"), pm.getParamV("Do you or anyone in your family have a restraining order?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Is there an indication of violence"), pm.getParamV("Is there an indication of violence"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Why?"), pm.getParamV("Why?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "If further investigation"), pm.getParamV("If further investigation"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Other Notes about this Member?"), pm.getParamV("Other Notes about this Member?"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Are you pregnant?"), pm.getParamV("Are you pregnant?"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "If yes, How far along are you in pregnancy?"), pm.getParamV("If yes, How far along are you in pregnancy?"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        return true;
    });
});
cucumber_1.Then('Verify IVRP Intake3 Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('IVRP Intake V3- How well has the member adopted the technology?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "How well has the member adopted the technology?"))).getText(), pm.getParamV("How well has the member adopted the technology?"));
        // base.compareValues('IVRP Intake V2 - What is the highest level of education you', await element(by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "What is the highest level of education you"))).getText(), pm.getParamV("What is the highest level of education you"));
        base.compareValues('IVRP Intake V3 - What type of violence situation', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "What type of violence situation"))).getText(), pm.getParamV("What type of violence situation"));
        base.compareValues('IVRP Intake V3 - Is the member a', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Is the member a"))).getText(), pm.getParamV("Is the member a"));
        base.compareValues('IVRP Intake V3 - Do you experience any of these stressors in your life?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Do you experience any of these stressors in your life?"))).getText(), pm.getParamV("Do you experience any of these stressors in your life?"));
        base.compareValues('IVRP Intake V3 - Do you or anyone in your family have a restraining order?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Do you or anyone in your family have a restraining order?"))).getText(), pm.getParamV("Do you or anyone in your family have a restraining order?"));
        base.compareValues('IVRP Intake V3 - Is there an indication of violence', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Is there an indication of violence"))).getText(), pm.getParamV("Is there an indication of violence"));
        base.compareValues('IVRP Intake V3 - Why?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Why?"))).getText(), pm.getParamV("Why?"));
        base.compareValues('IVRP Intake V3 - If further investigation', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "If further investigation"))).getText(), pm.getParamV("If further investigation"));
        base.compareValues('IVRP V3 - Other Notes about this Member?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Other Notes about this Member?"))).getText(), pm.getParamV("Other Notes about this Member?"));
        base.compareValues('IVRP Intake V3- Are you pregnant?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Are you pregnant?"))).getText(), pm.getParamV("Are you pregnant?"));
        base.compareValues('IVRP Intake V3- If yes, How far along are you in pregnancy?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "If yes, How far along are you in pregnancy?"))).getText(), pm.getParamV("If yes, How far along are you in pregnancy?"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
cucumber_1.Then('Enter Data in Safety Assessment Assessment', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        yield base.setChips_multiSelect(mpage.assess_multinew.replace("$paramName$", "Low Risk Factors (Concern)"), pm.getParamV("Low Risk Factors (Concern)"));
        yield base.setChips_multiSelect(mpage.assess_multinew.replace("$paramName$", "Moderate Risk Factors (Triggers a safety plan)"), pm.getParamV("Moderate Risk Factors (Triggers a safety plan)"));
        yield base.setChips_multiSelect(mpage.assess_multinew.replace("$paramName$", "High Risk Factors (Require conversation w/Supervisor before proceeding further)"), pm.getParamV("High Risk Factors (Require conversation w/Supervisor before proceeding further)"));
        yield base.setChips_multiSelect(mpage.assess_single.replace("$paramName$", "Needs Supervisor Review"), pm.getParamV("Needs Supervisor Review"));
        yield base.setTextArea(mpage.assess_textarea.replace("$paramName$", "Other Notes about this Member?"), pm.getParamV("Other Notes about this Member?"));
        yield protractor_1.browser.getTitle().then(function (text) {
            expect(text).to.equal("mMR");
        });
        return true;
    });
});
cucumber_1.Then('Verify Safety Assessment Responses', function (dataTable) {
    return __awaiter(this, void 0, void 0, function* () {
        pm.dataTableV(dataTable);
        base.compareValues('Safety Assessment - Low Risk Factors (Concern)', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Low Risk Factors (Concern)"))).getText(), pm.getParamV("Low Risk Factors (Concern)"));
        base.compareValues('Safety Assessment - Moderate Risk Factors (Triggers a safety plan)', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Moderate Risk Factors (Triggers a safety plan)"))).getText(), pm.getParamV("Moderate Risk Factors (Triggers a safety plan)"));
        base.compareValues('Safety Assessment - High Risk Factors (Require conversation w/Supervisor before proceeding further)', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "High Risk Factors (Require conversation w/Supervisor before proceeding further)"))).getText(), pm.getParamV("High Risk Factors (Require conversation w/Supervisor before proceeding further)"));
        base.compareValues('Safety Assessment - Needs Supervisor Review', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Needs Supervisor Review"))).getText(), pm.getParamV("Needs Supervisor Review"));
        base.compareValues('Safety Assessment - Other Notes about this Member?', yield protractor_1.element(protractor_1.by.xpath(mpage.m_ivrp_responses.replace("$replaceToken$", "Other Notes about this Member?"))).getText(), pm.getParamV("Other Notes about this Member?"));
        const val = base.getValue();
        expect(val ? JSON.stringify(val) : null).to.equal(null);
        const screenshot = yield protractor_1.browser.takeScreenshot();
        this.attach(screenshot, "image/png");
        return true;
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVtYmVyc19Bc3Nlc3NtZW50c1Rlc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3RlcERlZmluYXRpb25zL21lbWJlcnNfQXNzZXNzbWVudHNUZXN0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FBRWIsMkNBQXNEO0FBQ3RELHVDQUFvQztBQUNwQyw0REFBeUQ7QUFDekQsdURBQW9EO0FBQ3BELGdEQUF3QjtBQUV4Qix1Q0FBZ0M7QUFHaEMsSUFBSSxLQUFLLEdBQUcsSUFBSSx5QkFBVyxFQUFFLENBQUM7QUFDOUIsSUFBSSxJQUFJLEdBQUcsSUFBSSxXQUFJLEVBQUUsQ0FBQztBQUN0QixJQUFJLEVBQUUsR0FBRyxJQUFJLDJCQUFZLEVBQUUsQ0FBQztBQUM1QixJQUFJLE1BQU0sR0FBRyxjQUFJLENBQUMsTUFBTSxDQUFDO0FBRXpCLGVBQUksQ0FBQywwQkFBMEIsRUFBRSxVQUFnQixTQUFTOztRQUN4RCxJQUFJLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUM7UUFFM0IsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxJQUFJLFdBQVcsRUFBRTtZQUMvQixvQkFBTyxDQUFDLGVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUE7U0FDeEM7YUFDSTtZQUVILElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDekQsb0JBQU8sQ0FBQyxlQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDbEM7UUFFRCxNQUFNLG9CQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSTtZQUMxQyxN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QUFDLENBQUM7UUFDaE8sTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLHFEQUFxRCxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxxREFBcUQsQ0FBQyxDQUFDLENBQUM7UUFDeE0sTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLDJDQUEyQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDLENBQUM7UUFDcEwsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLDZFQUE2RSxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyw2RUFBNkUsQ0FBQyxDQUFDLENBQUM7UUFDeFAsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLG1HQUFtRyxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxtR0FBbUcsQ0FBQyxDQUFDLENBQUM7UUFDcFMsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLDZFQUE2RSxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyw2RUFBNkUsQ0FBQyxDQUFDLENBQUM7UUFDeFAsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLHFFQUFxRSxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxxRUFBcUUsQ0FBQyxDQUFDLENBQUM7UUFDeE8sTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLDJGQUEyRixDQUFDLEVBQUUsRUFBRSxDQUFD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Q0FBQyxDQUFDLENBQUM7UUFDeEwsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLDJDQUEyQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDLENBQUM7UUFDcEwsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLDJDQUEyQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDLENBQUM7UUFDcEwsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLG1CQUFtQixDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUM7UUFDcEksTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLG1CQUFtQixDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUM7UUFDcEksTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLHVDQUF1QyxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDLENBQUM7UUFDNUssTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLG9EQUFvRCxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxvREFBb0QsQ0FBQyxDQUFDLENBQUM7UUFHdE0sTUFBTSxvQkFBTyxDQUFDLFFBQVEsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLElBQUk7WUFDMUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUs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QUssQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxtR0FBbUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsbUdBQW1HLENBQUMsQ0FBQyxDQUFDO1FBQ3BTLE1BQU0sSUFBSSxDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSw0QkFBNEIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsNEJBQTRCLENBQUMsQ0FBQyxDQUFDO1FBQ3RKLE1BQU0sSUFBSSxDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSw0QkFBNEIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsNEJBQTRCLENBQUMsQ0FBQyxDQUFDO1FBQ3RKLE1BQU0sSUFBSSxDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxvQ0FBb0MsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsb0NBQW9DLENBQUMsQ0FBQyxDQUFDO1FBQ3RLLE1BQU0sSUFBSSxDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSx1REFBdUQsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsdURBQXVELENBQUMsQ0FBQyxDQUFDO1FBQzVNLE1BQU0sSUFBSSxDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSx1REFBdUQsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsdURBQXVELENBQUMsQ0FBQyxDQUFDO1FBQzVNLE1BQU0sSUFBSSxDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxxREFBcUQsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMscURBQXFELENBQUMsQ0FBQyxDQUFDO1FBQ3hNLE1BQU0s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LEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxtREFBbUQsQ0FBQyxDQUFDLENBQUM7UUFDcE0sTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLHdGQUF3RixDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyx3RkFBd0YsQ0FBQyxDQUFDLENBQUM7UUFDOVEsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLHdGQUF3RixDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyx3RkFBd0YsQ0FBQyxDQUFDLENBQUM7UUFDOVEsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLDJEQUEyRCxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQywyREFBMkQsQ0FBQyxDQUFDLENBQUM7UUFDcE4sTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLHVGQUF1RixDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyx1RkFBdUYsQ0FBQyxDQUFDLENBQUM7UUFDNVEsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLHVGQUF1RixDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyx1RkFBdUYsQ0FBQyxDQUFDLENBQUM7UUFFNVEsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLDBGQUEwRixDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQywwRkFBMEYsQ0FBQyxDQUFDLENBQUM7UUFDbFIsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENB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